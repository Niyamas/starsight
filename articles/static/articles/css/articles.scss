// Media queries
@mixin verge($point) {

    @if $point == 1980 {
        @media only screen and (max-width: 1980px) { @content; }
    }

    // For article listings page
    @else if $point == 1850 {
        @media only screen and (max-width: 1850px) { @content; }
    }

    @else if $point == 1700 {
        @media only screen and (max-width: 1700px) { @content; }
    }

    @else if $point == 1500 {
        @media only screen and (max-width: 1500px) { @content; }
    }

    @else if $point == 1350 {
        @media only screen and (max-width: 1350px) { @content; }
    }

    @else if $point == 1250 {
        @media only screen and (max-width: 1250px) { @content; }
    }

    @else if $point == desktop {
        @media only screen and (min-width: 1250px) { @content; }
    }

    @else if $point == 1100 {
        @media only screen and (max-width: 1100px) { @content; }
    }

    @else if $point == 1000 {
        @media only screen and (max-width: 1000px) { @content; }
    }

    @else if $point == 970 {
        @media only screen and (max-width: 970px) { @content; }
    }

    @else if $point == 900 {
        @media only screen and (max-width: 900px) { @content; }
    }

    @else if $point == 777 {
        @media only screen and (max-width: 777px) { @content; }
    }

}

// Functions
@function color($color-name) {
    @return map-get($colors, $color-name)
};

@function margin($margin-name) {
    @return map-get($margins, $margin-name)
};

// Variables
$colors: (
    background: #f5f5f5,
    white-text: #ffffff,
    text: #050404,
    text-faded: #05040463,
    scrollbar: #4FC0C0,
    footer: #30323F,

    featured-text-box: rgba(48, 50, 63, 0.5),

    cool-green: #4FC0C0,
    cooler-green: #5de4e4,
);

$margins: (
    superwide: 20vw,
    wide: 9.5vw,
    slim: 7vw
);

// Utility Classes
.starsight-btn {
    // Add with btn & btn-primary to change the default colors
    color: color(white-text) !important;
    background-color: color(cool-green);
    border-color: color(cool-green);

    &:hover, &:focus, &:active {
        color: color(white-text) !important;
        background-color: #5cdddd !important;
        border-color: #5cdddd !important;
    }
}

// Imports
@import 'article_detail';


.topics {
    margin: calc(200px + 70px) auto 100px auto !important;

    display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
    gap: 1.5rem;

    width: 85%;

    //border: 1px solid green;

    &__topic {
        padding: 0.3rem 0;
        width: 130px;
        min-width: 130px;
        max-width: 130px;

        //flex: 1 20%;

        text-align: center;
        font-size: 1.5rem;

        cursor: pointer;

        border-radius: 7px;

        transition: color ease-in-out 0.2s, background-color ease-in-out 0.2s;
        will-change: color, background-color;

        //border: 1px solid purple;

        &.clicked {
            color: color(white-text);
            background-color: color(cool-green);
        }

        @include verge(970) {
            font-size: 1.2rem;
            width: 90px;
            min-width: 90px;
            max-width: 90px;
        }
    }
}

.listings {
    position: relative;
    margin: 0 margin(superwide);

    height: auto;

    display: grid;
    grid-template-rows: repeat(2, 1fr);
    grid-template-columns: repeat(3, 1fr);
    grid-row-gap: 70px;
    grid-column-gap: 70px;

    &__no-articles {
        position: absolute;

        // Center a fixed element. Ty: https://css-tricks.com/quick-css-trick-how-to-center-an-object-exactly-in-the-center/
        top: 120px;
        left: 50%;
        transform: translate(-50%, -50%);

        color: rgb(126, 126, 126);

        //width: 100%;
        //text-align: center;
        font-size: 1.5rem;
    }

    @include verge(1850) {
        margin: 0 15vw;
    }

    @include verge(1500) {
        margin: 0 12vw;
    }

    @include verge(1250) {
        grid-template-rows: repeat(3, 1fr);
        grid-template-columns: repeat(2, 1fr);
    }

    @include verge(970) {
        margin: 0 7vw;
    }

    @include verge(777) {
        grid-template-rows: repeat(6, 1fr);
        grid-template-columns: 1fr; 
    }
}

.article {

    &__img {
        width: 100%;
        height: 300px;
        border-radius: 1px;

        object-fit: cover;
    }

    &__content {
        //margin-top: 12px;
        margin-top: 30px;

        &__title {
            margin-bottom: 5px;
            line-height: 1.7rem;

            a {
                font-size: 1.5rem;
                font-weight: 600;
                letter-spacing: 1px;
            }
        }

        &__topic {
            font-size: 0.9rem;
            letter-spacing: 3px;
            color: color(cool-green) !important;

            transition: color ease-in-out 0.2s;
            will-change: color;

            cursor: pointer;
    
            &:hover {
                color: color(cooler-green) !important;
            }
        }

        &__date {
            font-size: 0.9rem;
            font-weight: 300;
            letter-spacing: 2px;
            color: color(text);
        }

        &__text {

            p {
                margin-top: 10px;
                letter-spacing: 1px;
                line-height: 2.1;
            }
        }
    }
}

.pagination {
    margin-top: 100px !important;
    margin-left: margin(superwide) !important;

    width: fit-content;
    border-radius: 7px;

    &__page, &__next, &__before {
        width: 36px;
        height: 39px;

        display: flex;
        justify-content: center;
        align-items: center;

        cursor: pointer;

        //transition: color ease-in-out 0.2s;
        //will-change: color;

        // Re-enable once you figure out how to add transition when fetching pagination stuff
        transition: color ease-in-out 0.2s, background-color ease-in-out 0.2s;
        will-change: color, background-color;

        border-radius: 7px;

        //border: 1px solid green;

        &:not(.focused):hover {
            color: color(cool-green);
        }

        &.focused {
            color: color(white-text);
            background-color: color(cool-green);
        }
    }

    @include verge(1850) {
        margin-left: 15vw !important;
    }

    @include verge(1500) {
        margin-left: 12vw !important;
    }

    @include verge(970) {
       margin-left: 7vw !important;
    }
}











.spinner{
    position: absolute;
    z-index: 2;

    // Center a fixed element. Ty: https://css-tricks.com/quick-css-trick-how-to-center-an-object-exactly-in-the-center/
    /* top: 50%;
    left: 50%;
    transform: translate(-50%, -50%); */

    margin:auto;
    left:0;
    right:0;
    top:0;
    bottom:0;
    //position:fixed;

    width: 20rem;
    height: 20rem;
    display: inline-block;

    border: 3px solid rgba(255, 255, 255, 0.7);
    border-radius: 50%;
    border-top-color: color(cool-green);

    animation: 1s spin ease-in-out infinite;

    //display: none;
}

@keyframes spin{
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(359deg);
    }
}